// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XYZHotel.DB;

#nullable disable

namespace XYZHotel.Migrations
{
    [DbContext(typeof(HotelsContext))]
    partial class HotelsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("XYZHotel.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomersCutomerId")
                        .HasColumnType("int");

                    b.Property<int?>("hotelsHotelId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("CustomersCutomerId");

                    b.HasIndex("hotelsHotelId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("XYZHotel.Models.Customer", b =>
                {
                    b.Property<int>("CutomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CutomerId"));

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CutomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("XYZHotel.Models.Hotels", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<string>("HotelAmenities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelPrice")
                        .HasColumnType("int");

                    b.HasKey("HotelId");

                    b.ToTable("hotels");
                });

            modelBuilder.Entity("XYZHotel.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("RoomName")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int?>("hotelsHotelId")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("hotelsHotelId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("XYZHotel.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<int?>("HotelsHotelId")
                        .HasColumnType("int");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.HasIndex("HotelsHotelId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("XYZHotel.Models.Booking", b =>
                {
                    b.HasOne("XYZHotel.Models.Customer", "Customers")
                        .WithMany("bookings")
                        .HasForeignKey("CustomersCutomerId");

                    b.HasOne("XYZHotel.Models.Hotels", "hotels")
                        .WithMany("Bookings")
                        .HasForeignKey("hotelsHotelId");

                    b.Navigation("Customers");

                    b.Navigation("hotels");
                });

            modelBuilder.Entity("XYZHotel.Models.Room", b =>
                {
                    b.HasOne("XYZHotel.Models.Hotels", "hotels")
                        .WithMany("Rooms")
                        .HasForeignKey("hotelsHotelId");

                    b.Navigation("hotels");
                });

            modelBuilder.Entity("XYZHotel.Models.Staff", b =>
                {
                    b.HasOne("XYZHotel.Models.Hotels", null)
                        .WithMany("Staffs")
                        .HasForeignKey("HotelsHotelId");
                });

            modelBuilder.Entity("XYZHotel.Models.Customer", b =>
                {
                    b.Navigation("bookings");
                });

            modelBuilder.Entity("XYZHotel.Models.Hotels", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Rooms");

                    b.Navigation("Staffs");
                });
#pragma warning restore 612, 618
        }
    }
}
